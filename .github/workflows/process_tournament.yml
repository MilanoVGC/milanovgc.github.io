# .github/workflows/process_tournament.yml

name: Process Tournament TDF Upload

on:
  push:
    branches: [ main ] # Or your default branch
    paths: [ 'incoming/**.tdf' ]

permissions:
  contents: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    outputs:
      processed_folder: ${{ steps.process_file.outputs.tournament_folder }}
      original_name: ${{ steps.process_file.outputs.tournament_name }}

    steps:
      # Steps 1-3 remain the same (Checkout, Install xmlstarlet, Find TDF)
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Install xmlstarlet
        run: |
          sudo apt-get update && sudo apt-get install -y xmlstarlet
      - name: Find Uploaded TDF
        id: find_file
        run: |
          TDF_FILE=$(find incoming -name '*.tdf' -print -quit)
          if [ -z "$TDF_FILE" ]; then echo "No TDF file found."; exit 1; fi
          echo "file_path=$TDF_FILE" >> $GITHUB_OUTPUT

      # Step 4: Process Tournament File (Generates individual tournament page)
      - name: Process Tournament File
        id: process_file
        run: |
          INPUT_FILE="${{ steps.find_file.outputs.file_path }}"
          # Extract Name, Date, City, Country, Organizer
          TOURNAMENT_NAME=$(xmlstarlet sel -t -v '/tournament/data/name' "$INPUT_FILE" 2>/dev/null || echo "Unknown Tournament")
          TOURNAMENT_CITY=$(xmlstarlet sel -t -v '/tournament/data/city' "$INPUT_FILE" 2>/dev/null || echo "")
          TOURNAMENT_COUNTRY=$(xmlstarlet sel -t -v '/tournament/data/country' "$INPUT_FILE" 2>/dev/null || echo "")
          TOURNAMENT_ORGANIZER=$(xmlstarlet sel -t -v '/tournament/data/organizer/@name' "$INPUT_FILE" 2>/dev/null || echo "") # Get organizer name attribute

          SANITIZED_NAME=$(echo "$TOURNAMENT_NAME" | iconv -t ascii//TRANSLIT | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr '[:upper:]' '[:lower:]')
          if [ -z "$SANITIZED_NAME" ]; then SANITIZED_NAME="unnamed-tournament-$(date +%s)"; fi
          TOURNAMENT_FOLDER="$SANITIZED_NAME"
          mkdir -p "$TOURNAMENT_FOLDER/data"

          # Construct Location String
          LOCATION_STRING=""
          if [ -n "$TOURNAMENT_CITY" ]; then LOCATION_STRING="$TOURNAMENT_CITY"; fi
          if [ -n "$TOURNAMENT_COUNTRY" ]; then
              if [ -n "$LOCATION_STRING" ]; then LOCATION_STRING="$LOCATION_STRING, "; fi
              LOCATION_STRING="$LOCATION_STRING$TOURNAMENT_COUNTRY"
          fi

          # Generate index.html for the specific tournament
          # Use the consistent header structure
          cat << EOF > "$TOURNAMENT_FOLDER/index.html"
          <!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>${TOURNAMENT_NAME} - Pairings & Standings</title> <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet"> <link rel="stylesheet" href="../assets/style.css"> </head> <body>
              <header class="main-header"> <!-- Use same header class -->
                  <div class="container">
                      <div class="logo"><a href="../index.html">MilanoVGC</a></div> <!-- Logo links home -->
                      <nav>
                         <!-- Optional nav links specific to tournament page if needed -->
                         <a href="../index.html">Tournament List</a>
                      </nav>
                  </div>
              </header>
              <main>
                  <div class="tournament-info-header"> <!-- New container for Title/Organizer/Location -->
                      <div class="container">
                          <div class="info-left">
                              <h1 id="tournament-name">${TOURNAMENT_NAME}</h1>
                              <p id="tournament-organizer">${TOURNAMENT_ORGANIZER:+"Organized by: $TOURNAMENT_ORGANIZER"}</p> <!-- Show organizer if present -->
                          </div>
                          <div class="info-right">
                              <p id="tournament-location">${LOCATION_STRING}</p>
                          </div>
                      </div>
                  </div>

                  <div class="container" id="tournament-content"> <!-- Existing content container -->
                      <div class="controls"> <nav id="round-tabs"></nav> <div class="search-container"> <input type="text" id="search-input" placeholder="Search by Player Name..."> <button type="button" id="clear-search-btn" class="clear-search-button" title="Clear search">×</button> </div> </div>
                      <div id="pairings-container"> <h2 id="current-round-title"></h2> <table id="pairings-table" class="results-table"> <thead> <tr> <th>Table</th> <th>Player 1</th> <th>Player 2</th> </tr> </thead> <tbody id="pairings-body"></tbody> </table> <p id="loading-message">Loading pairings...</p> <p id="no-search-results" style="display: none;">No players found matching.</p> </div>
                      <div id="standings-container" style="display: none; margin-top: 40px;"> <h2 id="standings-title">Swiss Standings</h2> <table id="standings-table" class="results-table"> <thead> <tr> <th>Rank</th> <th>Player</th> <th>Record</th> <th>OWP %</th> <th>OOWP %</th> </tr> </thead> <tbody id="standings-body"></tbody> </table> <p id="standings-loading-message" style="display: none;">Calculating standings...</p> <p id="no-standings-message" style="display: none;">Standings pending.</p> </div>
                  </div>
              </main>
              <footer class="main-footer"> <div class="container"> <p>© $(date +%Y) MilanoVGC. All rights reserved.</p> </div> </footer>
              <script src="../assets/script.js"></script>
          </body> </html>
          EOF
          echo "Generated $TOURNAMENT_FOLDER/index.html"
          echo "Moving '$INPUT_FILE' to '$TOURNAMENT_FOLDER/data/tournament_data.xml'"
          mv "$INPUT_FILE" "$TOURNAMENT_FOLDER/data/tournament_data.xml"
          if [ $? -ne 0 ]; then echo "ERROR: Failed to move TDF file!"; exit 1; fi
          echo "tournament_folder=$TOURNAMENT_FOLDER" >> $GITHUB_OUTPUT
          echo "tournament_name=${TOURNAMENT_NAME}" >> $GITHUB_OUTPUT

      # Step 5: Update Root Index File (Homepage)
      - name: Update Root Index File (Homepage)
        env: { DISPLAY_NAME_VAR: "" }
        run: |
          echo "Generating simple root index.html..."
          cat << EOF > index.html
          <!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>MilanoVGC - Tournament Results</title> <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet"> <link rel="stylesheet" href="./assets/style.css"> </head> <body>
              <header class="main-header">
                  <div class="container">
                      <div class="logo">MilanoVGC</div> <!-- Consistent Logo Text -->
                      <nav>
                          <a href="./admin_upload.html" class="button button-header">Admin Upload</a>
                      </nav>
                  </div>
              </header>
              <main>
                  <!-- Changed padding method: apply padding here instead of #tournament-list -->
                  <div class="container" style="padding-top: 32px; padding-bottom: 60px;">
                      <h2 style="margin-bottom: 24px; font-size: 1.8em; font-weight: 700;">Available Tournaments</h2>
                      <div class="tournament-grid">
          EOF
          find . -maxdepth 1 -mindepth 1 -type d ! -path './assets' ! -path './incoming' ! -path './.github' ! -path './.git' -print0 | sort -rz | while IFS= read -r -d $'\0' dir; do
              FOLDER_NAME=$(basename "$dir")
              DISPLAY_NAME=$(grep -o -m 1 '<title>.* - Pairings & Standings</title>' "$FOLDER_NAME/index.html" 2>/dev/null | sed -e 's/<title>//' -e 's/ - Pairings & Standings<\/title>//' || echo "${FOLDER_NAME//-/ }")
              if [ -z "$DISPLAY_NAME" ]; then DISPLAY_NAME=${FOLDER_NAME//-/ }; fi
              echo "Adding link for $FOLDER_NAME as '$DISPLAY_NAME'"
              export DISPLAY_NAME_VAR="$DISPLAY_NAME"
              ESCAPED_DISPLAY_NAME=$(python -c "import html, os; print(html.escape(os.environ.get('DISPLAY_NAME_VAR', '')))")
              cat << CARD_EOF >> index.html
                          <a href="./$FOLDER_NAME/" class="tournament-card">
                              ${ESCAPED_DISPLAY_NAME}
                          </a>
          CARD_EOF
          done
          cat << EOF >> index.html
                      </div> <!-- tournament-grid -->
                  </div> <!-- main container -->
              </main>
              <footer class="main-footer"> <div class="container"> <p>© $(date +%Y) MilanoVGC. All rights reserved.</p> </div> </footer>
          </body> </html>
          EOF
          echo "Generated root index.html"

      # Step 6: Commit and Push Changes
      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          if ! git diff --staged --quiet; then
            ORIGINAL_NAME="${{ steps.process_file.outputs.tournament_name }}"
            COMMIT_MSG="Automated: Process TDF upload for tournament '$(echo "$ORIGINAL_NAME" | sed "s/'/\\\'/g")'"
            if git diff --staged --quiet index.html; then : ; else COMMIT_MSG="$COMMIT_MSG, update homepage list"; fi
            git commit -m "$COMMIT_MSG"
            git push
            echo "Changes committed and pushed."
          else
            echo "No changes detected to commit."
          fi
