name: Delete Tournament Link from Homepage

on:
  repository_dispatch:
    types: [delete-tournament-link] # Triggered by the custom event sent from upload.js

permissions:
  contents: write # Allow workflow to commit changes back to the repo

jobs:
  delete-link:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Use a specific PAT if GITHUB_TOKEN permissions are restricted, otherwise GITHUB_TOKEN is usually fine
          # token: ${{ secrets.YOUR_PAT_WITH_WRITE_ACCESS }} # If needed
          token: ${{ secrets.GITHUB_TOKEN }} # Default token

      - name: Get Tournament Slug from Payload
        id: get_slug
        run: |
          slug_to_delete="${{ github.event.client_payload.slug }}"
          if [[ -z "$slug_to_delete" ]]; then
            echo "ERROR: No slug provided in the event payload." >&2
            exit 1
          fi
          # Basic validation/sanitization
          if [[ ! "$slug_to_delete" =~ ^[a-zA-Z0-9._-]+$ ]]; then # Allow ., _, -
             echo "ERROR: Invalid slug format received: $slug_to_delete" >&2
             exit 1
          fi
          echo "Slug to delete: $slug_to_delete"
          echo "slug=$slug_to_delete" >> $GITHUB_OUTPUT

      - name: Remove Link from index.html
        id: remove_link
        run: |
          slug="${{ steps.get_slug.outputs.slug }}"
          index_file="index.html"
          temp_index_file="temp_index.html.$$" # Use process ID for temp file uniqueness

          echo "Attempting to remove link for slug '$slug' from $index_file"

          if [ ! -f "$index_file" ]; then
             echo "ERROR: $index_file not found!" >&2
             exit 1
          fi

          # Corrected awk command: Pass 'slug' variable using -v
          # Also use single quotes (\047) in warning message for safety
          awk -v slug_pattern="href=\"./${slug}/\"" -v slug="${slug}" '
          BEGIN { found=0 }
          {
              # Check if the current line contains the href pattern
              if ($0 ~ slug_pattern) {
                  found=1;
                  # Print a comment indicating removal instead of the original line
                  # Use the awk variable "slug" here
                  print "<!-- Link for " slug " removed by workflow -->";
              } else {
                  # Print lines that do not contain the pattern
                  print $0;
              }
          }
          END {
              if (found == 0) {
                  # Use awk variable "slug" here, escape single quotes with \047
                  print "WARNING: No link found for slug \047" slug "\047 in index.html. No changes made." > "/dev/stderr";
                  exit 0; # Exit successfully, file won't be changed
              } else {
                  print "Link removal pattern applied successfully." > "/dev/stderr";
              }
          }' "$index_file" > "$temp_index_file"

          # Check if awk command succeeded
          if [ $? -ne 0 ]; then
              echo "ERROR: awk command failed to process $index_file." >&2
              rm -f "$temp_index_file" # Clean up temp file on error
              exit 1
          elif [ ! -s "$temp_index_file" ]; then
              # Check if temp file is empty (e.g., if index.html was empty)
              echo "ERROR: Processed file $temp_index_file is empty. Aborting." >&2
              rm -f "$temp_index_file"
              exit 1
          fi

          # Check if the file content actually changed
          if cmp -s "$index_file" "$temp_index_file"; then
             echo "No changes detected in $index_file after processing. Link might have been absent."
             rm "$temp_index_file" # Clean up temp file
             echo "changed=false" >> $GITHUB_OUTPUT
          else
             echo "Changes detected. Replacing original $index_file."
             mv "$temp_index_file" "$index_file"
             echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push Updated Index
        if: steps.remove_link.outputs.changed == 'true' # Only run if changes were made
        run: |
          slug="${{ steps.get_slug.outputs.slug }}"
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add index.html
          # Check staging area before committing
          if git diff --staged --quiet; then
            echo "No changes staged for commit. This might indicate an issue."
          else
            git commit -m "Remove link for deleted tournament: ${slug}"
            echo "Pushing updated index.html to branch ${{ github.ref_name }}"
            # Retry push slightly in case of brief conflicts (optional)
            git push origin ${{ github.ref_name }} || (sleep 5 && git push origin ${{ github.ref_name }})
          fi

      - name: No Changes to Commit
        if: steps.remove_link.outputs.changed == 'false'
        run: echo "No changes were made to index.html."
